parameters:
	phpBin: php
	phpStanDir: %appDir%/../phpstan
	localDataDir: %appDir%/../data
	remoteDataDir: %appDir%/../data
	downloadsDir: %tempDir%/downloads
	aws:
		version: latest
		region: eu-west-1
		credentials: Aws\Credentials\Credentials(%awsAccessKey%, %awsSecretKey%)

	versions:
		labelsBlacklist:
			- '0.1'
			- '0.2'
			- '0.2.1'
			- '0.2.2'
			- '0.3'
			- '0.3.1'
			- '0.4'
			- '0.4.1'
			- '0.4.2'
			- '0.8.1'

		pullRequestOwnersWhitelist:
			- JanTvrdik
			- ondrejmirtes
			- pepakriz
			- phpstan
			- stekycz

	config:
		topLevelKeysWhitelist:
			- parameters

		parameterKeysWhitelist:
			- checkAlwaysTrueCheckTypeFunctionCall
			- checkAlwaysTrueInstanceof
			- checkAlwaysTrueStrictComparison
			- checkArgumentsPassedByReference
			- checkClassCaseSensitivity
			- checkFunctionArgumentTypes
			- checkFunctionNameCase
			- checkMaybeUndefinedVariables
			- checkNullables
			- checkThisOnly
			- checkUnionTypes
			- earlyTerminatingMethodCalls
			- ignoreErrors
			- polluteCatchScopeWithTryAssignments
			- polluteScopeWithLoopInitialAssignments
			- reportUnmatchedIgnoredErrors
			- universalObjectCratesClasses

	playgroundFormDefaults:
		level: 7
		phpCode: '''
			<?php declare(strict_types = 1);

			class HelloWorld
			{
				public function sayHello(DateTimeImutable $date): void
				{
					echo 'Hello, ' . $date->format('j. n. Y');
				}
			}
		'''
		config: '''
			parameters:
				checkAlwaysTrueCheckTypeFunctionCall: false
				checkAlwaysTrueInstanceof: false
				checkAlwaysTrueStrictComparison: false
				checkFunctionNameCase: false
				polluteCatchScopeWithTryAssignments: false
				polluteScopeWithLoopInitialAssignments: true
				earlyTerminatingMethodCalls: []
				universalObjectCratesClasses: []
				ignoreErrors: []
		'''


nette.application:
	errorPresenter: Error
	mapping:
		*: App\*Module\Presenters\*Presenter

nette.routing:
	routes:
		'[r/<inputHash>]': 'Playground:default'
		'r/<inputHash>/input': 'Api:showInput'
		'service/<action>': ['presenter' => 'Service']

services:
	# app model
	- App\Model\PhpStanInstaller(tempDir: %downloadsDir%, targetDir: %phpStanDir%/phpstan)
	- App\Model\PhpStanVersions(dataPath: %phpStanDir%/versions.json, usersWhitelist: %versions.pullRequestOwnersWhitelist%, versionsBlacklist: %versions.labelsBlacklist%)
	- App\Model\PhpStanAnalyzer(phpBin: %phpBin%, phpStanDir: %phpStanDir%/phpstan, localDataDir: %localDataDir%, remoteDataDir: %remoteDataDir%)
	- App\Model\CodeSanitizer
	- App\Model\CodeValidator
	- App\Model\ConfigValidator(topLevelKeysWhitelist: %config.topLevelKeysWhitelist%, parameterKeysWhitelist: %config.parameterKeysWhitelist%)


	# app ui
	- App\Components\PlaygroundFormFactory(defaults: %playgroundFormDefaults%)
	- App\Components\PlaygroundFormControlFactory
	- App\Components\TerminalOutputControlFactory


	# milo/github-api
	- Milo\Github\Api


	# nikic/php-parser
	- PhpParser\Lexer
	- PhpParser\Parser\Php7
	- PhpParser\PrettyPrinter\Standard


	# sensiolabs/ansi-to-html
	- SensioLabs\AnsiConverter\Theme\SolarizedXTermTheme
	- SensioLabs\AnsiConverter\AnsiToHtmlConverter

	# AWS SDK
	-
		class: Aws\S3\S3Client
		arguments:
			args: %aws%

	# CLI
	-
		class: Symfony\Component\Console\Application
		setup:
			- setCatchExceptions(%productionMode%)
			- add(@App\Commands\RefreshVersionsCommand)
			- add(@App\Commands\SleepCommand)
	-
		class: App\Commands\RefreshVersionsCommand
	-
		class: App\Commands\SleepCommand
